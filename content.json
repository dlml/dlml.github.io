{"pages":[],"posts":[{"title":"master期间的一些学术成果","text":"[1] 第二作者(导师一作). 不确定并串联系统的贮备冗余优化. 系统科学与数学 [J], 2018, 38(5): 1-14. (1A) [2] 第二作者(导师一作). Redundancy optimization of uncertain parallel-series system with warm standby elements. Complexity[J]. (中科院分区SCI-2) [3] 第三作者. Two new spectral conjugate gradient algorithms based on Hestenes–Stiefel. Journal of Algorithms and Computational Technology[J], 2017, 11(4): 345-352. (EI) [4] 第三作者. A New Spectral Conjugate Gradient Method &amp; ARIMA Combined Forecasting Model and Application. Journal of Algorithms and Computational Technology[J]. (EI) [5] 第三作者. 基于改进谱共轭梯度思想的 ARIMA 模型参数估计优化法. 兰州理工大学学报 [J]. (北大核心)","link":"/2019/07/04/master期间的一些学术成果/"},{"title":"win7(64位)关于ncnn的debug版本的编译过程","text":"1. 编译生成debug版本的protobuf123456&gt; cd &lt;protobuf-root-dir&gt;&gt; mkdir build-vs2015-debug&gt; cd build-vs2015-debug&gt; cmake -G&quot;NMake Makefiles&quot; -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=%cd%/install -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF ..&gt; nmake&gt; nmake install 2. 编译生成debug版本的ncnn123456&gt; cd &lt;ncnn-root-dir&gt;&gt; mkdir build-vs2015-debug&gt; cd build-vs2015-debug&gt; cmake -G&quot;NMake Makefiles&quot; -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build-vs2015-debug/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build-vs2015-debug/install/lib/libprotobufd.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build-vs2015-debug/install/bin/protoc.exe -DNCNN_VULKAN=ON ..&gt; nmake&gt; nmake install 查看build-vs2015-debug下编译生成的ncnn.lib，编译顺利通过的话其大小大约是release版本的3倍。","link":"/2019/07/12/win7-64位-关于ncnn的debug版本的编译过程/"},{"title":"winograd算法详解","text":"在计算机运行过程做加法速度比乘法快, 而在卷积神经网络中存在大量的矩阵乘法运算，winograd算法(论文地址)横空出世，能够很好的降低乘法次数，可谓加速的一把利器，其大量应用在前向预测框架上，比如ncnn、mace和mnn等。 以一维卷积$F(2,3)$为例，设输入信号为 $$d=[d_0\\quad d_1\\quad d_2\\quad d_3]^T$$ 卷积核为 $g=[g_0\\quad g_1\\quad g_2]^T$ 滑动步长为1，不做pad操作，则输出结果可以写成 $$F(2,3)=\\left[\\begin{array}{ccc}d_0 &d_1 &d_2 \\\\d_1 &d_2 &d_3\\end{array}\\right]\\left[\\begin{array}{ccc}g_0 \\\\g_1\\\\g_2\\end{array}\\right]=\\left[\\begin{array}{c}r_0\\\\r_1\\end{array}\\right]$$ 其中 $$r_0=d_0*g_0+d_1*g_1+d_2*g_2$$ $$r_1=d_1*g_0+d_2*g_1+d_3*g_2$$ 可以看到如果用一般的矩阵乘法，则需要6次乘法和4次加法。 winograd做法如下 $$F(2,3)=\\left[\\begin{array}{ccc}d_0 &d_1 &d_2 \\\\d_1 &d_2 &d_3\\end{array}\\right]\\left[\\begin{array}{ccc}g_0 \\\\g_1\\\\g_2\\end{array}\\right]=\\left[\\begin{array}{c}m_1+m_2+m_3\\\\m_2-m_3-m_4\\end{array}\\right]$$ 其中 $$ m_1=(d_0-d_2)g_0, \\quad m_2=(d_1+d_2)\\frac{g_0+g_1+g_2}{2}\\\\ m_4=(d_1-d_3)g_2, \\quad m_3=(d_2-d_1)\\frac{g_0-g_1+g_2}{2}\\\\ $$ 可以看到利用winograd算法需要4次乘法，8次加法，相比一般矩阵乘法，通过增加加法运算减少乘法的运算，可以实现加速。 由于winograd算法证明比较复杂暂时不写了，直接丢计算公式，一维卷积计算公式如下 $$Y=A^T\\left[[Gg]\\bigodot[B^Td]\\right]$$ 其中$\\bigodot$表示element-wise，$A,G,B$都是根据输出大小和卷积核提前确定好的(有人已经写好了,可参考wincnn)，$g$表示卷积核，$d$表示输入数据(也就是需要进行卷积计算的数据)。 对应二维卷积计算公式如下: $$Y=A^T\\left[[GgG^T]\\bigodot[B^TdB]\\right]A$$ 注：如有问题请邮件联系996821501@qq.com","link":"/2019/07/03/winograd算法详解/"},{"title":"window安装cuda以及cudnn指南","text":"检查电脑是否正常安装驱动，对应驱动可以去nvidia官网查询下载更新，点击进入，安装完毕可以cmd中运行nvidia-smi，可以正常看到驱动的版本信息以及GPU的其他参数。 安装cuda，点击进入选择需要的版本，选择对应的系统平台，安装即可。 下载cudnn，根据对应cuda版本选择相应的cudnn即可，点击进入，将其解压，将对应的lib、include和x64文件夹中文件复制到NVIDIA GPU Computing Toolkit(比如cuda8，对应目录为C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0)对应的目录下即可。 安装相应的深度学习框架，不同的cuda版本对应着不同的框架版本，看官网说明即可。","link":"/2019/07/03/window安装cuda以及cudnn指南/"},{"title":"加密版标注工具使用","text":"1.下载标注工具, pc端点击这里即可下载； 2.测试加密数据，pc端点击这里即可下载； 标注工具样式如下图所示 按钮open只能打开加密的png图片和保存后的加密标注文件jsonbin 图片标注完后保存一次，就可以设置自动保存，再打开图片直接标注即可。 保存的标注文件会在图片的同一级目录，名字一样 …… 参考：https://github.com/wkentaro/labelme","link":"/2019/08/15/加密版标注工具使用/"},{"title":"测试window上gpu环境是否可用","text":"下载，解压，在当前目录下按住shift，然后右击，点击在此处打开命令窗口，在cmd窗口输入命令以及运行结果如下： 1234567891011121314151617181920212223D:\\gpu&gt;benchncnn.exe 8 1 1 0[0 GeForce GTX 970] queueC=0[16] queueT=1[2] memU=4294967295 memDL=7 memHV=9[0 GeForce GTX 970] fp16s=0 fp16a=0 int8s=0 int8a=0loop_count = 8num_threads = 1powersave = 0gpu_device = 0 squeezenet min = 4.00 max = 24.64 avg = 17.55 mobilenet min = 6.86 max = 21.39 avg = 8.80 mobilenet_v2 min = 5.17 max = 29.81 avg = 20.25 shufflenet min = 4.08 max = 20.13 avg = 14.86 mnasnet min = 5.56 max = 36.80 avg = 13.09 proxylessnasnet min = 5.88 max = 38.48 avg = 10.99 googlenet min = 13.18 max = 13.33 avg = 13.23 resnet18 min = 9.45 max = 38.60 avg = 13.18 alexnet min = 10.80 max = 56.78 avg = 17.18 vgg16 min = 51.27 max = 58.90 avg = 54.87 resnet50 min = 23.18 max = 25.65 avg = 24.57 squeezenet-ssd min = 21.77 max = 23.41 avg = 22.76 mobilenet-ssd min = 16.24 max = 18.25 avg = 17.50 mobilenet-yolo min = 56.53 max = 58.08 avg = 57.11 mobilenet-yolov3 min = 22.77 max = 27.41 avg = 24.99 若显示类似于以上结果，则基本验证该window机器的GPU可用。 如有问题请联系996821501@qq.com","link":"/2019/07/04/测试window上gpu环境/"},{"title":"灰度图拉伸","text":"在OCR识别的时候，有时候由于背景和目标颜色太过于接近，而灰度拉伸就能发挥其作用，以下图展示了拉伸前和拉伸后的图像以及灰度直方图： 实现代码如下： 123456789101112131415161718192021222324252627282930313233343536#coding=utf-8import cv2def grey_scale(image,threshold): img_gray = cv2.cvtColor(image ,cv2.COLOR_RGB2GRAY) rows ,cols = img_gray.shape flat_gray = img_gray.reshape((cols * rows,)).tolist() #把数组压缩成一维的列表 flat_gray.sort() #将列表从小到大排序 a = flat_gray[int(threshold * len(flat_gray))] # threshold%分位数 b = flat_gray[int((1-threshold) * len(flat_gray))] # (1-threshold)%分位数 img_gray[img_gray&lt;a] = 0 img_gray[img_gray&gt;=b] = 255 return img_graysrc = cv2.imread(&apos;test.jpg&apos;)result = grey_scale(src,threshold=0.30)cv2.imwrite(&apos;test_result.jpg&apos;,result)#可视化展示import matplotlib.pyplot as pltimport matplotlibchinfo = matplotlib.font_manager.FontProperties(fname=&apos;C:/Windows/Fonts/msyh.ttc&apos;)plt.subplot(221)plt.imshow(src)plt.title(&apos;原始图&apos;,fontproperties=chinfo)plt.subplot(222)plt.imshow(result)plt.title(&apos;拉伸后结果图&apos;,fontproperties=chinfo)plt.subplot(223)plt.hist(src.ravel(), 256)plt.title(&apos;拉伸前&apos;,fontproperties=chinfo)plt.subplot(224)plt.hist(result.ravel(), 256)plt.title(&apos;拉伸后&apos;,fontproperties=chinfo)plt.show() 注：ravel()是将数组压缩成一维，便于画直方图，subplot函数“22*”便是在一张图上画两行两列的图像，依次是221-&gt;222-&gt;223-&gt;224。","link":"/2019/07/01/灰度图拉伸/"},{"title":"ncnn在window平台的使用方法","text":"ncnn是一种轻量的前向推理框架，广泛应用于移动端，而本篇博客主要介绍了其在pc端的使用方式。 1.编译protobuf 下载地址：点击进入下载 编译工具：vs2015 x64 本机工具命令提示符 123456&gt; cd &lt;protobuf-root-dir&gt;&gt; mkdir build-vs2015&gt; cd build-vs2015&gt; cmake -G&quot;NMake Makefiles&quot; -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF ../cmake&gt; nmake&gt; nmake install 2.安装vulkan(pc上支持gpu加速) 下载地址：https://vulkan.lunarg.com 3.编译ncnn 1234567&gt; cd &lt;ncnn-root-dir&gt;&gt; mkdir -p build-vs2015&gt; cd build-vs2015&gt; cmake -G&quot;NMake Makefiles&quot; -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=&lt;protobuf-root-dir&gt;/build-vs2015/install/include -DProtobuf_LIBRARIES=&lt;protobuf-root-dir&gt;/build-vs2015/install/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=&lt;protobuf-root-dir&gt;/build-vs2017/install/bin/protoc.exe -DNCNN_VULKAN=ON ..&gt; nmake&gt; nmake install 1234567891011121314151617181920212223242526272829303132D:\\ncnn-20190628\\build&gt;cmake -G&quot;NMake Makefiles&quot; -DCMAKE_BUILD_TYPE=Release -DCAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_s2015/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2015/instal/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs205/install/bin/protoc.exe -DNCNN_VULKAN=ON ..-- CMAKE_INSTALL_PREFIX = D:\\ncnn-20190628\\build/install-- The C compiler identification is MSVC 19.0.24215.1-- The CXX compiler identification is MSVC 19.0.24215.1-- Check for working C compiler: D:/Program Files/VS2015/VC/bin/amd64/cl.exe-- Check for working C compiler: D:/Program Files/VS2015/VC/bin/amd64/cl.exe --works-- Detecting C compiler ABI info-- Detecting C compiler ABI info - done-- Detecting C compile features-- Detecting C compile features - done-- Check for working CXX compiler: D:/Program Files/VS2015/VC/bin/amd64/cl.exe-- Check for working CXX compiler: D:/Program Files/VS2015/VC/bin/amd64/cl.exe- works-- Detecting CXX compiler ABI info-- Detecting CXX compiler ABI info - done-- Detecting CXX compile features-- Detecting CXX compile features - done-- Found OpenMP_C: -openmp (found version &quot;2.0&quot;)-- Found OpenMP_CXX: -openmp (found version &quot;2.0&quot;)-- Found OpenMP: TRUE (found version &quot;2.0&quot;)-- Found Vulkan: D:/VulkanSDK/1.1.92.1/Lib/vulkan-1.lib-- Found glslangValidator: D:/VulkanSDK/1.1.92.1/Bin/glslangValidator.exe-- Found Protobuf: D:/protobuf-3.4.0/build_vs2015/install/lib/libprotobuf.lib (ound version &quot;3.4.0&quot;)-- Configuring done-- Generating done-- Build files have been written to: D:/ncnn-20190628/build 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164D:\\ncnn-20190628\\build&gt;nmakeMicrosoft (R) 程序维护实用工具 14.00.24210.0 版版权所有 (C) Microsoft Corporation。 保留所有权利。Scanning dependencies of target generate-spirv[ 0%] Building SPIR-V module absval.spv[ 0%] Building SPIR-V module absval_fp16p.spv[ 0%] Building SPIR-V module absval_fp16s.spv[ 0%] Building SPIR-V module absval_fp16a.spv[ 0%] Building SPIR-V module absval_pack4.spv[ 1%] Building SPIR-V module absval_pack4_fp16p.spv[ 1%] Building SPIR-V module absval_pack4_fp16s.spv[ 1%] Building SPIR-V module absval_pack4_fp16a.spv[ 1%] Building SPIR-V module batchnorm.spv[ 1%] Building SPIR-V module batchnorm_fp16p.spv[ 2%] Building SPIR-V module batchnorm_fp16s.spv[ 2%] Building SPIR-V module batchnorm_fp16a.spv[ 2%] Building SPIR-V module batchnorm_pack4.spv[ 2%] Building SPIR-V module batchnorm_pack4_fp16p.spv[ 2%] Building SPIR-V module batchnorm_pack4_fp16s.spv[ 2%] Building SPIR-V module batchnorm_pack4_fp16a.spv[ 3%] Building SPIR-V module concat.spv[ 3%] Building SPIR-V module concat_fp16p.spv[ 3%] Building SPIR-V module concat_fp16s.spv[ 3%] Building SPIR-V module concat_fp16a.spv[ 3%] Building SPIR-V module concat_pack4.spv[ 3%] Building SPIR-V module concat_pack4_fp16p.spv[ 4%] Building SPIR-V module concat_pack4_fp16s.spv[ 4%] Building SPIR-V module concat_pack4_fp16a.spv[ 4%] Building SPIR-V module concat_pack4to1.spv[ 4%] Building SPIR-V module concat_pack4to1_fp16p.spv[ 4%] Building SPIR-V module concat_pack4to1_fp16s.spv[ 5%] Building SPIR-V module concat_pack4to1_fp16a.spv[ 5%] Building SPIR-V module convolution.spv[ 5%] Building SPIR-V module convolution_fp16p.spv[ 5%] Building SPIR-V module convolution_fp16s.spv[ 5%] Building SPIR-V module convolution_fp16a.spv[ 5%] Building SPIR-V module convolution_1x1s1d1.spv[ 6%] Building SPIR-V module convolution_1x1s1d1_fp16p.spv[ 6%] Building SPIR-V module convolution_1x1s1d1_fp16s.spv[ 6%] Building SPIR-V module convolution_1x1s1d1_fp16a.spv[ 6%] Building SPIR-V module convolution_pack1to4.spv[ 6%] Building SPIR-V module convolution_pack1to4_fp16p.spv[ 6%] Building SPIR-V module convolution_pack1to4_fp16s.spv[ 7%] Building SPIR-V module convolution_pack1to4_fp16a.spv[ 7%] Building SPIR-V module convolution_pack4.spv[ 7%] Building SPIR-V module convolution_pack4_fp16p.spv[ 7%] Building SPIR-V module convolution_pack4_fp16s.spv[ 7%] Building SPIR-V module convolution_pack4_fp16a.spv[ 8%] Building SPIR-V module convolution_pack4_1x1s1d1.spv[ 8%] Building SPIR-V module convolution_pack4_1x1s1d1_fp16p.spv[ 8%] Building SPIR-V module convolution_pack4_1x1s1d1_fp16s.spv[ 8%] Building SPIR-V module convolution_pack4_1x1s1d1_fp16a.spv[ 8%] Building SPIR-V module convolution_pack4_3x3s1d1_lds_8_8_2.spv[ 8%] Building SPIR-V module convolution_pack4_3x3s1d1_lds_8_8_2_fp16p.s[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_lds_8_8_2_fp16s.s[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_lds_8_8_2_fp16a.s[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_gemm.s[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_gemm_fv[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_gemm_fv[ 9%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_gemm_fv[ 10%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfut.spv[ 10%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfut_fp16p.spv[ 10%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfut_fp16s.spv[ 10%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfut_fp16a.spv[ 10%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfput.spv[ 11%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfput_fp16p.spv[ 11%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfput_fp16s.spv[ 11%] Building SPIR-V module convolution_pack4_3x3s1d1_winograd23_transfput_fp16a.spv[ 11%] Building SPIR-V module convolution_pack4to1.spv[ 11%] Building SPIR-V module convolution_pack4to1_fp16p.spv[ 11%] Building SPIR-V module convolution_pack4to1_fp16s.spv[ 12%] Building SPIR-V module convolution_pack4to1_fp16a.spv[ 12%] Building SPIR-V module crop.spv[ 12%] Building SPIR-V module crop_fp16p.spv[ 12%] Building SPIR-V module crop_fp16s.spv[ 12%] Building SPIR-V module crop_fp16a.spv[ 12%] Building SPIR-V module crop_pack4.spv[ 13%] Building SPIR-V module crop_pack4_fp16p.spv[ 13%] Building SPIR-V module crop_pack4_fp16s.spv[ 13%] Building SPIR-V module crop_pack4_fp16a.spv[ 13%] Building SPIR-V module deconvolution.spv[ 13%] Building SPIR-V module deconvolution_fp16p.spv[ 14%] Building SPIR-V module deconvolution_fp16s.spv[ 14%] Building SPIR-V module deconvolution_fp16a.spv[ 14%] Building SPIR-V module deconvolution_pack1to4.spv[ 14%] Building SPIR-V module deconvolution_pack1to4_fp16p.spv[ 14%] Building SPIR-V module deconvolution_pack1to4_fp16s.spv[ 14%] Building SPIR-V module deconvolution_pack1to4_fp16a.spv[ 15%] Building SPIR-V module deconvolution_pack4.spv[ 15%] Building SPIR-V module deconvolution_pack4_fp16p.spv[ 15%] Building SPIR-V module deconvolution_pack4_fp16s.spv[ 15%] Building SPIR-V module deconvolution_pack4_fp16a.spv[ 15%] Building SPIR-V module deconvolution_pack4to1.spv[ 15%] Building SPIR-V module deconvolution_pack4to1_fp16p.spv[ 16%] Building SPIR-V module deconvolution_pack4to1_fp16s.spv[ 16%] Building SPIR-V module deconvolution_pack4to1_fp16a.spv[ 16%] Building SPIR-V module dropout.spv[ 16%] Building SPIR-V module dropout_fp16p.spv[ 16%] Building SPIR-V module dropout_fp16s.spv[ 17%] Building SPIR-V module dropout_fp16a.spv[ 17%] Building SPIR-V module dropout_pack4.spv[ 17%] Building SPIR-V module dropout_pack4_fp16p.spv[ 17%] Building SPIR-V module dropout_pack4_fp16s.spv[ 17%] Building SPIR-V module dropout_pack4_fp16a.spv[ 17%] Building SPIR-V module eltwise.spv[ 18%] Building SPIR-V module eltwise_fp16p.spv[ 18%] Building SPIR-V module eltwise_fp16s.spv[ 18%] Building SPIR-V module eltwise_fp16a.spv[ 18%] Building SPIR-V module eltwise_pack4.spv[ 18%] Building SPIR-V module eltwise_pack4_fp16p.spv[ 19%] Building SPIR-V module eltwise_pack4_fp16s.spv[ 19%] Building SPIR-V module eltwise_pack4_fp16a.spv[ 19%] Building SPIR-V module flatten.spv[ 19%] Building SPIR-V module flatten_fp16p.spv[ 19%] Building SPIR-V module flatten_fp16s.spv[ 19%] Building SPIR-V module flatten_fp16a.spv[ 20%] Building SPIR-V module flatten_pack1to4.spv[ 20%] Building SPIR-V module flatten_pack1to4_fp16p.spv[ 20%] Building SPIR-V module flatten_pack1to4_fp16s.spv[ 20%] Building SPIR-V module flatten_pack1to4_fp16a.spv[ 20%] Building SPIR-V module flatten_pack4.spv[ 20%] Building SPIR-V module flatten_pack4_fp16p.spv[ 21%] Building SPIR-V module flatten_pack4_fp16s.spv[ 21%] Building SPIR-V module flatten_pack4_fp16a.spv[ 21%] Building SPIR-V module innerproduct.spv[ 21%] Building SPIR-V module innerproduct_fp16p.spv[ 21%] Building SPIR-V module innerproduct_fp16s.spv[ 22%] Building SPIR-V module innerproduct_fp16a.spv[ 22%] Building SPIR-V module innerproduct_pack1to4.spv[ 22%] Building SPIR-V module innerproduct_pack1to4_fp16p.spv[ 22%] Building SPIR-V module innerproduct_pack1to4_fp16s.spv[ 22%] Building SPIR-V module innerproduct_pack1to4_fp16a.spv[ 22%] Building SPIR-V module innerproduct_pack4.spv[ 23%] Building SPIR-V module innerproduct_pack4_fp16p.spv[ 23%] Building SPIR-V module innerproduct_pack4_fp16s.spv[ 23%] Building SPIR-V module innerproduct_pack4_fp16a.spv[ 23%] Building SPIR-V module innerproduct_pack4_lds_64.spv[ ...][ 99%] Building CXX object tools/onnx/CMakeFiles/onnx2ncnn.dir/onnx.pb.cc.objonnx.pb.ccD:\\protobuf-3.4.0\\build_vs2015\\install\\include\\google/protobuf/io/coded_stream.h(870): warning C4800: “google::protobuf::internal::AtomicWord”: 将值强制为布尔值“true”或“false”(性能警告)D:\\protobuf-3.4.0\\build_vs2015\\install\\include\\google/protobuf/io/coded_stream.h(874): warning C4800: “google::protobuf::internal::Atomic64”: 将值强制为布尔值“true”或“false”(性能警告)D:\\protobuf-3.4.0\\build_vs2015\\install\\include\\google/protobuf/generated_message_util.h(160): warning C4800: “google::protobuf::uint32”: 将值强制为布尔值“true”或“false”(性能警告)[100%] Linking CXX executable onnx2ncnn.exe[100%] Built target onnx2ncnn 123456789101112131415161718192021222324252627282930313233D:\\ncnn-20190628\\build&gt;nmake installMicrosoft (R) 程序维护实用工具 14.00.24210.0 版版权所有 (C) Microsoft Corporation。 保留所有权利。[ 77%] Built target generate-spirv[ 97%] Built target ncnn[ 97%] Built target benchncnn[ 98%] Built target ncnnoptimize[ 98%] Built target ncnn2mem[ 99%] Built target caffe2ncnn[ 99%] Built target mxnet2ncnn[100%] Built target onnx2ncnnInstall the project...-- Install configuration: &quot;Release&quot;-- Installing: D:/ncnn-20190628/build/install/lib/ncnn.lib-- Installing: D:/ncnn-20190628/build/install/include/allocator.h-- Installing: D:/ncnn-20190628/build/install/include/blob.h-- Installing: D:/ncnn-20190628/build/install/include/command.h-- Installing: D:/ncnn-20190628/build/install/include/cpu.h-- Installing: D:/ncnn-20190628/build/install/include/gpu.h-- Installing: D:/ncnn-20190628/build/install/include/layer.h-- Installing: D:/ncnn-20190628/build/install/include/layer_type.h-- Installing: D:/ncnn-20190628/build/install/include/mat.h-- Installing: D:/ncnn-20190628/build/install/include/modelbin.h-- Installing: D:/ncnn-20190628/build/install/include/net.h-- Installing: D:/ncnn-20190628/build/install/include/opencv.h-- Installing: D:/ncnn-20190628/build/install/include/option.h-- Installing: D:/ncnn-20190628/build/install/include/paramdict.h-- Installing: D:/ncnn-20190628/build/install/include/pipeline.h-- Installing: D:/ncnn-20190628/build/install/include/benchmark.h-- Installing: D:/ncnn-20190628/build/install/include/layer_type_enum.h-- Installing: D:/ncnn-20190628/build/install/include/platform.h 4.测试一下，将编译好的benchmark.exe复制到根目录benchmark文件夹中，然后运行如下命令 12345678910111213141516171819202122232425D:\\ncnn-20190628\\benchmark&gt;benchncnn.exe[0 GeForce GTX 970] queueC=0[16] queueT=1[2] memU=4294967295 memDL=7 memHV=9[0 GeForce GTX 970] fp16p=1 fp16s=1 fp16a=0 int8s=1 int8a=1loop_count = 4num_threads = 4powersave = 0gpu_device = -1 squeezenet min = 43.21 max = 46.93 avg = 44.39 squeezenet_int8 min = 57.67 max = 70.70 avg = 61.82 mobilenet min = 53.84 max = 68.20 avg = 59.21 mobilenet_int8 min = 88.39 max = 96.28 avg = 92.16 mobilenet_v2 min = 60.08 max = 62.36 avg = 61.50 shufflenet min = 17.35 max = 18.38 avg = 17.76 mnasnet min = 49.47 max = 52.29 avg = 50.60 proxylessnasnet min = 65.89 max = 66.47 avg = 66.20 googlenet min = 132.48 max = 135.69 avg = 133.85 googlenet_int8 min = 191.08 max = 194.21 avg = 192.58 resnet18 min = 126.42 max = 128.72 avg = 127.54 resnet18_int8 min = 162.66 max = 170.55 avg = 165.19 alexnet min = 90.18 max = 258.30 avg = 159.68 vgg16 min = 856.14 max = 878.42 avg = 863.20 vgg16_int8 min = 1119.27 max = 1130.59 avg = 1124.57 resnet50 min = 302.27 max = 313.23 avg = 306.50 resnet50_int8 min = 428.14 max = 431.83 avg = 430.05","link":"/2019/07/01/ncnn在window平台的使用方法/"},{"title":"linux安装protobuf","text":"依次执行以下命令，下载源码编译安装，时间较长耐心等候，测试环境Ubuntu 16.04 12345678910sudo apt-get install autoconf automake libtool curl make g++ unzipgit clone https://github.com/google/protobuf.gitcd protobufgit submodule update --init --recursive./autogen.sh./configuremakemake checksudo make installsudo ldconfig # refresh shared library cache. 安装日志如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576huangwei@ubuntu:~$ sudo apt-get install autoconf automake libtool curl make g++ unzip[sudo] password for huangwei: Sorry, try again.[sudo] password for huangwei: Reading package lists... DoneBuilding dependency tree Reading state information... Doneg++ is already the newest version (4:5.3.1-1ubuntu1).make is already the newest version (4.1-6).unzip is already the newest version (6.0-20ubuntu1).The following additional packages will be installed: autotools-dev libcurl3-gnutls libltdl-dev libsigsegv2 m4Suggested packages: autoconf-archive gnu-standards autoconf-doc libtool-doc gfortran | fortran95-compiler gcj-jdkThe following NEW packages will be installed: autoconf automake autotools-dev curl libltdl-dev libsigsegv2 libtool m4The following packages will be upgraded: libcurl3-gnutls1 upgraded, 8 newly installed, 0 to remove and 397 not upgraded.Need to get 1,757 kB of archives.After this operation, 6,193 kB of additional disk space will be used.Do you want to continue? [Y/n] YGet:1 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 libsigsegv2 amd64 2.10-4 [14.1 kB]Get:2 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates/main amd64 libcurl3-gnutls amd64 7.47.0-1ubuntu2.13 [184 kB]Get:3 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 m4 amd64 1.4.17-5 [195 kB]Get:4 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 autoconf all 2.69-9 [321 kB]Get:5 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 autotools-dev all 20150820.1 [39.8 kB]Get:6 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 automake all 1:1.15-4ubuntu1 [510 kB]Get:7 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates/main amd64 curl amd64 7.47.0-1ubuntu2.13 [139 kB]Get:8 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 libltdl-dev amd64 2.4.6-0.1 [162 kB]Get:9 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 libtool all 2.4.6-0.1 [193 kB]Fetched 1,757 kB in 1s (1,655 kB/s)Selecting previously unselected package libsigsegv2:amd64.(Reading database ... 180533 files and directories currently installed.)Preparing to unpack .../libsigsegv2_2.10-4_amd64.deb ...Unpacking libsigsegv2:amd64 (2.10-4) ...Preparing to unpack .../libcurl3-gnutls_7.47.0-1ubuntu2.13_amd64.deb ...Unpacking libcurl3-gnutls:amd64 (7.47.0-1ubuntu2.13) over (7.47.0-1ubuntu2.8) ...Selecting previously unselected package m4.Preparing to unpack .../archives/m4_1.4.17-5_amd64.deb ...Unpacking m4 (1.4.17-5) ...Selecting previously unselected package autoconf.Preparing to unpack .../autoconf_2.69-9_all.deb ...Unpacking autoconf (2.69-9) ...Selecting previously unselected package autotools-dev.Preparing to unpack .../autotools-dev_20150820.1_all.deb ...Unpacking autotools-dev (20150820.1) ...Selecting previously unselected package automake.Preparing to unpack .../automake_1%3a1.15-4ubuntu1_all.deb ...Unpacking automake (1:1.15-4ubuntu1) ...Selecting previously unselected package curl.Preparing to unpack .../curl_7.47.0-1ubuntu2.13_amd64.deb ...Unpacking curl (7.47.0-1ubuntu2.13) ...Selecting previously unselected package libltdl-dev:amd64.Preparing to unpack .../libltdl-dev_2.4.6-0.1_amd64.deb ...Unpacking libltdl-dev:amd64 (2.4.6-0.1) ...Selecting previously unselected package libtool.Preparing to unpack .../libtool_2.4.6-0.1_all.deb ...Unpacking libtool (2.4.6-0.1) ...Processing triggers for libc-bin (2.23-0ubuntu10) ...Processing triggers for install-info (6.1.0.dfsg.1-5) ...Processing triggers for man-db (2.7.5-1) ...Processing triggers for doc-base (0.10.7) ...Processing 1 added doc-base file...Setting up libsigsegv2:amd64 (2.10-4) ...Setting up libcurl3-gnutls:amd64 (7.47.0-1ubuntu2.13) ...Setting up m4 (1.4.17-5) ...Setting up autoconf (2.69-9) ...Setting up autotools-dev (20150820.1) ...Setting up automake (1:1.15-4ubuntu1) ...update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto modeSetting up curl (7.47.0-1ubuntu2.13) ...Setting up libltdl-dev:amd64 (2.4.6-0.1) ...Setting up libtool (2.4.6-0.1) ...Processing triggers for libc-bin (2.23-0ubuntu10) ... 123456789huangwei@ubuntu:~$ git clone https://github.com/google/protobuf.gitCloning into &apos;protobuf&apos;...remote: Enumerating objects: 22, done.remote: Counting objects: 100% (22/22), done.remote: Compressing objects: 100% (19/19), done.remote: Total 64210 (delta 3), reused 6 (delta 1), pack-reused 64188Receiving objects: 100% (64210/64210), 54.49 MiB | 122.00 KiB/s, done.Resolving deltas: 100% (43482/43482), done.Checking connectivity... done. 12345678910111213141516171819202122huangwei@ubuntu:~$ cd protobuf/huangwei@ubuntu:~/protobuf$ git submodule update --init --recursiveSubmodule &apos;third_party/benchmark&apos; (https://github.com/google/benchmark.git) registered for path &apos;third_party/benchmark&apos;Submodule &apos;third_party/googletest&apos; (https://github.com/google/googletest.git) registered for path &apos;third_party/googletest&apos;Cloning into &apos;third_party/benchmark&apos;...remote: Enumerating objects: 12, done.remote: Counting objects: 100% (12/12), done.remote: Compressing objects: 100% (8/8), done.remote: Total 5201 (delta 2), reused 5 (delta 2), pack-reused 5189Receiving objects: 100% (5201/5201), 1.64 MiB | 81.00 KiB/s, done.Resolving deltas: 100% (3416/3416), done.Checking connectivity... done.Submodule path &apos;third_party/benchmark&apos;: checked out &apos;5b7683f49e1e9223cf9927b24f6fd3d6bd82e3f8&apos;Cloning into &apos;third_party/googletest&apos;...remote: Enumerating objects: 6, done.remote: Counting objects: 100% (6/6), done.remote: Compressing objects: 100% (6/6), done.remote: Total 17118 (delta 0), reused 4 (delta 0), pack-reused 17112Receiving objects: 100% (17118/17118), 6.04 MiB | 150.00 KiB/s, done.Resolving deltas: 100% (12603/12603), done.Checking connectivity... done.Submodule path &apos;third_party/googletest&apos;: checked out &apos;5ec7f0c4a113e2f18ac2c6cc7df51ad6afc24081&apos; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950huangwei@ubuntu:~/protobuf$ ./autogen.sh+ mkdir -p third_party/googletest/m4+ autoreconf -f -i -Wall,no-obsoletelibtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, &apos;build-aux&apos;.libtoolize: copying file &apos;build-aux/ltmain.sh&apos;libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, &apos;m4&apos;.libtoolize: copying file &apos;m4/libtool.m4&apos;libtoolize: copying file &apos;m4/ltoptions.m4&apos;libtoolize: copying file &apos;m4/ltsugar.m4&apos;libtoolize: copying file &apos;m4/ltversion.m4&apos;libtoolize: copying file &apos;m4/lt~obsolete.m4&apos;configure.ac:27: installing &apos;build-aux/compile&apos;configure.ac:30: installing &apos;build-aux/config.guess&apos;configure.ac:30: installing &apos;build-aux/config.sub&apos;configure.ac:24: installing &apos;build-aux/install-sh&apos;configure.ac:24: installing &apos;build-aux/missing&apos;Makefile.am: installing &apos;build-aux/depcomp&apos;parallel-tests: installing &apos;build-aux/test-driver&apos;libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, &apos;build-aux&apos;.libtoolize: copying file &apos;build-aux/ltmain.sh&apos;libtoolize: Consider adding &apos;AC_CONFIG_MACRO_DIRS([m4])&apos; to configure.ac,libtoolize: and rerunning libtoolize and aclocal.libtoolize: Consider adding &apos;-I m4&apos; to ACLOCAL_AMFLAGS in Makefile.am.configure.ac:22: installing &apos;build-aux/compile&apos;configure.ac:25: installing &apos;build-aux/config.guess&apos;configure.ac:25: installing &apos;build-aux/config.sub&apos;configure.ac:19: installing &apos;build-aux/install-sh&apos;configure.ac:19: installing &apos;build-aux/missing&apos;Makefile.am: installing &apos;build-aux/depcomp&apos;parallel-tests: installing &apos;build-aux/test-driver&apos;configure.ac:13: installing &apos;build-aux/install-sh&apos;configure.ac:13: installing &apos;build-aux/missing&apos;libtoolize: putting auxiliary files in &apos;.&apos;.libtoolize: copying file &apos;./ltmain.sh&apos;libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, &apos;m4&apos;.libtoolize: copying file &apos;m4/libtool.m4&apos;libtoolize: copying file &apos;m4/ltoptions.m4&apos;libtoolize: copying file &apos;m4/ltsugar.m4&apos;libtoolize: copying file &apos;m4/ltversion.m4&apos;libtoolize: copying file &apos;m4/lt~obsolete.m4&apos;configure.ac:81: installing &apos;./ar-lib&apos;configure.ac:76: installing &apos;./compile&apos;configure.ac:46: installing &apos;./config.guess&apos;configure.ac:46: installing &apos;./config.sub&apos;configure.ac:48: installing &apos;./install-sh&apos;configure.ac:48: installing &apos;./missing&apos;benchmarks/Makefile.am: installing &apos;./depcomp&apos;parallel-tests: installing &apos;./test-driver&apos;+ rm -rf autom4te.cache config.h.in~+ exit 0 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283huangwei@ubuntu:~/protobuf$ ./configurechecking whether to enable maintainer-specific portions of Makefiles... yeschecking build system type... x86_64-pc-linux-gnuchecking host system type... x86_64-pc-linux-gnuchecking target system type... x86_64-pc-linux-gnuchecking for a BSD-compatible install... /usr/bin/install -cchecking whether build environment is sane... yeschecking for a thread-safe mkdir -p... /bin/mkdir -pchecking for gawk... nochecking for mawk... mawkchecking whether make sets $(MAKE)... yeschecking whether make supports nested variables... yeschecking whether UID &apos;1000&apos; is supported by ustar format... yeschecking whether GID &apos;1000&apos; is supported by ustar format... yeschecking how to create a ustar tar archive... gnutarchecking whether make supports nested variables... (cached) yeschecking for gcc... gccchecking whether the C compiler works... yeschecking for C compiler default output file name... a.outchecking for suffix of executables... checking whether we are cross compiling... nochecking for suffix of object files... ochecking whether we are using the GNU C compiler... yeschecking whether gcc accepts -g... yeschecking for gcc option to accept ISO C89... none neededchecking whether gcc understands -c and -o together... yeschecking for style of include used by make... GNUchecking dependency style of gcc... gcc3checking for g++... g++checking whether we are using the GNU C++ compiler... yeschecking whether g++ accepts -g... yeschecking dependency style of g++... gcc3checking how to run the C preprocessor... gcc -Echecking for gcc... gccchecking whether we are using the GNU C compiler... (cached) yeschecking whether gcc accepts -g... yeschecking for gcc option to accept ISO C89... (cached) none neededchecking whether gcc understands -c and -o together... (cached) yeschecking dependency style of gcc... (cached) gcc3checking how to run the C preprocessor... gcc -Echecking how to run the C++ preprocessor... g++ -Echecking for g++... g++checking whether we are using the GNU C++ compiler... (cached) yeschecking whether g++ accepts -g... yeschecking dependency style of g++... (cached) gcc3checking how to run the C++ preprocessor... g++ -Echecking for grep that handles long lines and -e... /bin/grepchecking for egrep... /bin/grep -Echecking for ANSI C header files... yeschecking for sys/types.h... yeschecking for sys/stat.h... yeschecking for stdlib.h... yeschecking for string.h... yeschecking for memory.h... yeschecking for strings.h... yeschecking for inttypes.h... yeschecking for stdint.h... yeschecking for unistd.h... yes...checking if g++ supports -c -o file.o... yeschecking if g++ supports -c -o file.o... (cached) yeschecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yeschecking dynamic linker characteristics... (cached) GNU/Linux ld.sochecking how to hardcode library paths into programs... immediatechecking for python... /usr/bin/pythonchecking for the pthreads library -lpthreads... nochecking whether pthreads work without any flags... nochecking whether pthreads work with -Kthread... nochecking whether pthreads work with -kthread... nochecking for the pthreads library -llthread... nochecking whether pthreads work with -pthread... yeschecking for joinable pthread attribute... PTHREAD_CREATE_JOINABLEchecking if more special flags are required for pthreads... nochecking whether to check for GCC pthread/shared inconsistencies... yeschecking whether -pthread is sufficient with -shared... yeschecking for gtest-config... nochecking that generated files are newer than configure... doneconfigure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating scripts/gmock-configconfig.status: creating build-aux/config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commands 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566huangwei@ubuntu:~/protobuf$ makemake all-recursivemake[1]: Entering directory &apos;/home/huangwei/protobuf&apos;Making all in .make[2]: Entering directory &apos;/home/huangwei/protobuf&apos;make[2]: Leaving directory &apos;/home/huangwei/protobuf&apos;Making all in srcmake[2]: Entering directory &apos;/home/huangwei/protobuf/src&apos; CXX google/protobuf/stubs/bytestream.lo CXX google/protobuf/stubs/common.lo CXX google/protobuf/stubs/int128.lo CXX google/protobuf/io/io_win32.lo CXX google/protobuf/stubs/status.lo CXX google/protobuf/stubs/statusor.lo CXX google/protobuf/stubs/stringpiece.lo CXX google/protobuf/stubs/stringprintf.lo CXX google/protobuf/stubs/structurally_valid.lo CXX google/protobuf/stubs/strutil.lo CXX google/protobuf/stubs/time.lo CXX google/protobuf/any_lite.lo CXX google/protobuf/arena.lo CXX google/protobuf/extension_set.lo CXX google/protobuf/generated_enum_util.lo CXX google/protobuf/generated_message_util.lo CXX google/protobuf/generated_message_table_driven_lite.lo CXX google/protobuf/implicit_weak_message.lo CXX google/protobuf/message_lite.lo CXX google/protobuf/parse_context.lo CXX google/protobuf/repeated_field.lo CXX google/protobuf/wire_format_lite.lo CXX google/protobuf/io/coded_stream.lo CXX google/protobuf/io/strtod.lo CXX google/protobuf/io/zero_copy_stream.lo CXX google/protobuf/io/zero_copy_stream_impl.lo CXX google/protobuf/io/zero_copy_stream_impl_lite.lo CXXLD libprotobuf-lite.laar: `u&apos; modifier ignored since `D&apos; is the default (see `U&apos;) CXX google/protobuf/any.pb.logoogle/protobuf/any.pb.cc:81:13: warning: ‘dynamic_init_dummy_google_2fprotobuf_2fany_2eproto’ defined but not used [-Wunused-variable] static bool dynamic_init_dummy_google_2fprotobuf_2fany_2eproto = ( ::PROTOBUF_ ^ CXX google/protobuf/api.pb.logoogle/protobuf/api.pb.cc:171:13: warning: ‘dynamic_init_dummy_google_2fprotobuf_2fapi_2eproto’ defined but not used [-Wunused-variable] static bool dynamic_init_dummy_google_2fprotobuf_2fapi_2eproto = ( ::PROTOBUF_ ^ CXX google/protobuf/stubs/mathlimits.lo CXX google/protobuf/any.lo CXX google/protobuf/descriptor.lo CXX google/protobuf/descriptor_database.lo CXX google/protobuf/descriptor.pb.lo... CXX google/protobuf/compiler/csharp/csharp_message.lo CXX google/protobuf/compiler/csharp/csharp_message_field.lo CXX google/protobuf/compiler/csharp/csharp_primitive_field.lo CXX google/protobuf/compiler/csharp/csharp_reflection_class.lo CXX google/protobuf/compiler/csharp/csharp_repeated_enum_field.lo CXX google/protobuf/compiler/csharp/csharp_repeated_message_field.lo CXX google/protobuf/compiler/csharp/csharp_repeated_primitive_field.lo CXX google/protobuf/compiler/csharp/csharp_source_generator_base.lo CXX google/protobuf/compiler/csharp/csharp_wrapper_field.lo CXXLD libprotoc.laar: `u&apos; modifier ignored since `D&apos; is the default (see `U&apos;) CXX google/protobuf/compiler/main.o CXXLD protocmake[2]: Leaving directory &apos;/home/huangwei/protobuf/src&apos;make[1]: Leaving directory &apos;/home/huangwei/protobuf&apos; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253huangwei@ubuntu:~/protobuf$ make checkMaking check in .make[1]: Entering directory &apos;/home/huangwei/protobuf&apos;make check-localmake[2]: Entering directory &apos;/home/huangwei/protobuf&apos;Making lib/libgmock.a lib/libgmock_main.a in gmockmake[3]: Entering directory &apos;/home/huangwei/protobuf/third_party/googletest/googletest&apos;depbase=`echo src/gtest-all.lo | sed &apos;s|[^/]*$|.deps/&amp;|;s|\\.lo$||&apos;`;\\/bin/bash ./libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H -I. -I./build-aux -I. -I./include -pthread -DGTEST_HAS_PTHREAD=1 -g -std=c++11 -DNDEBUG -MT src/gtest-all.lo -MD -MP -MF $depbase.Tpo -c -o src/gtest-all.lo src/gtest-all.cc &amp;&amp;\\mv -f $depbase.Tpo $depbase.Plolibtool: compile: g++ -DHAVE_CONFIG_H -I. -I./build-aux -I. -I./include -pthread -DGTEST_HAS_PTHREAD=1 -g -std=c++11 -DNDEBUG -MT src/gtest-all.lo -MD -MP -MF src/.deps/gtest-all.Tpo -c src/gtest-all.cc -fPIC -DPIC -o src/.libs/gtest-all.olibtool: compile: g++ -DHAVE_CONFIG_H -I. -I./build-aux -I. -I./include -pthread -DGTEST_HAS_PTHREAD=1 -g -std=c++11 -DNDEBUG -MT src/gtest-all.lo -MD -MP -MF src/.deps/gtest-all.Tpo -c src/gtest-all.cc -o src/gtest-all.o &gt;/dev/null 2&gt;&amp;1/bin/bash ./libtool --tag=CXX --mode=link g++ -pthread -DGTEST_HAS_PTHREAD=1 -g -std=c++11 -DNDEBUG -o lib/libgtest.la -rpath /usr/local/lib src/gtest-all.lo libtool: link: g++ -fPIC -DPIC -shared -nostdlib /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/5/crtbeginS.o src/.libs/gtest-all.o -L/usr/lib/gcc/x86_64-linux-gnu/5 -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/5/../../.. -lstdc++ -lm -lc -lgcc_s /usr/lib/gcc/x86_64-linux-gnu/5/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/crtn.o -pthread -g -pthread -Wl,-soname -Wl,libgtest.so.0 -o lib/.libs/libgtest.so.0.0.0libtool: link: (cd &quot;lib/.libs&quot; &amp;&amp; rm -f &quot;libgtest.so.0&quot; &amp;&amp; ln -s &quot;libgtest.so.0.0.0&quot; &quot;libgtest.so.0&quot;)libtool: link: (cd &quot;lib/.libs&quot; &amp;&amp; rm -f &quot;libgtest.so&quot; &amp;&amp; ln -s &quot;libgtest.so.0.0.0&quot; &quot;libgtest.so&quot;)libtool: link: ar cru lib/.libs/libgtest.a src/gtest-all.oar: `u&apos; modifier ignored since `D&apos; is the default (see `U&apos;)libtool: link: ranlib lib/.libs/libgtest.alibtool: link: ( cd &quot;lib/.libs&quot; &amp;&amp; rm -f &quot;libgtest.la&quot; &amp;&amp; ln -s &quot;../libgtest.la&quot; &quot;libgtest.la&quot; )... CXX google/protobuf/util/internal/testdata/no_warning_test-proto3.pb.o CXX google/protobuf/util/internal/testdata/no_warning_test-struct.pb.o CXX google/protobuf/util/internal/testdata/no_warning_test-timestamp_duration.pb.o CXX google/protobuf/util/internal/testdata/no_warning_test-wrappers.pb.o CXX google/protobuf/util/no_warning_test-json_format.pb.o CXX google/protobuf/util/no_warning_test-json_format_proto3.pb.o CXX google/protobuf/util/no_warning_test-message_differencer_unittest.pb.o CXXLD no-warning-testmake[2]: Leaving directory &apos;/home/huangwei/protobuf/src&apos;make check-TESTSmake[2]: Entering directory &apos;/home/huangwei/protobuf/src&apos;make[3]: Entering directory &apos;/home/huangwei/protobuf/src&apos;PASS: protobuf-testPASS: protobuf-lazy-descriptor-testPASS: protobuf-lite-testPASS: google/protobuf/compiler/zip_output_unittest.shPASS: protobuf-lite-arena-testPASS: no-warning-test============================================================================Testsuite summary for Protocol Buffers 3.9.0-rc-1============================================================================# TOTAL: 6# PASS: 6# SKIP: 0# XFAIL: 0# FAIL: 0# XPASS: 0# ERROR: 0============================================================================make[3]: Leaving directory &apos;/home/huangwei/protobuf/src&apos;make[2]: Leaving directory &apos;/home/huangwei/protobuf/src&apos;make[1]: Leaving directory &apos;/home/huangwei/protobuf/src&apos; 123456789101112131415161718192021222324252627282930huangwei@ubuntu:~/protobuf$ sudo make install[sudo] password for huangwei: Making install in .make[1]: Entering directory &apos;/home/huangwei/protobuf&apos;make[2]: Entering directory &apos;/home/huangwei/protobuf&apos;make[2]: Nothing to be done for &apos;install-exec-am&apos;. /bin/mkdir -p &apos;/usr/local/lib/pkgconfig&apos; /usr/bin/install -c -m 644 protobuf.pc protobuf-lite.pc &apos;/usr/local/lib/pkgconfig&apos;make[2]: Leaving directory &apos;/home/huangwei/protobuf&apos;make[1]: Leaving directory &apos;/home/huangwei/protobuf&apos;Making install in srcmake[1]: Entering directory &apos;/home/huangwei/protobuf/src&apos;make[2]: Entering directory &apos;/home/huangwei/protobuf/src&apos; /bin/mkdir -p &apos;/usr/local/lib&apos; /bin/bash ../libtool --mode=install /usr/bin/install -c libprotobuf-lite.la libprotobuf.la libprotoc.la &apos;/usr/local/lib&apos;libtool: install: /usr/bin/install -c .libs/libprotobuf-lite.so.20.0.0 /usr/local/lib/libprotobuf-lite.so.20.0.0libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libprotobuf-lite.so.20.0.0 libprotobuf-lite.so.20 || { rm -f libprotobuf-lite.so.20 &amp;&amp; ln -s libprotobuf-lite.so.20.0.0 libprotobuf-lite.so.20; }; })libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libprotobuf-lite.so.20.0.0 libprotobuf-lite.so || { rm -f libprotobuf-lite.so &amp;&amp; ln -s libprotobuf-lite.so.20.0.0 libprotobuf-lite.so; }; })libtool: install: /usr/bin/install -c .libs/libprotobuf-lite.lai /usr/local/lib/libprotobuf-lite.lalibtool: install: /usr/bin/install -c .libs/libprotobuf.so.20.0.0 /usr/local/lib/libprotobuf.so.20.0.0libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libprotobuf.so.20.0.0 libprotobuf.so.20 || { rm -f libprotobuf.so.20 &amp;&amp; ln -s libprotobuf.so.20.0.0 libprotobuf.so.20; }; })libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libprotobuf.so.20.0.0 libprotobuf.so || { rm -f libprotobuf.so &amp;&amp; ln -s libprotobuf.so.20.0.0 libprotobuf.so; }; })libtool: install: /usr/bin/install -c .libs/libprotobuf.lai /usr/local/lib/libprotobuf.lalibtool: warning: relinking &apos;libprotoc.la&apos;... /usr/bin/install -c -m 644 google/protobuf/compiler/objectivec/objectivec_generator.h google/protobuf/compiler/objectivec/objectivec_helpers.h &apos;/usr/local/include/google/protobuf/compiler/objectivec&apos; /bin/mkdir -p &apos;/usr/local/include/google/protobuf/compiler&apos; /usr/bin/install -c -m 644 google/protobuf/compiler/code_generator.h google/protobuf/compiler/command_line_interface.h google/protobuf/compiler/importer.h google/protobuf/compiler/parser.h google/protobuf/compiler/plugin.h google/protobuf/compiler/plugin.pb.h &apos;/usr/local/include/google/protobuf/compiler&apos;make[2]: Leaving directory &apos;/home/huangwei/protobuf/src&apos;make[1]: Leaving directory &apos;/home/huangwei/protobuf/src&apos; 123huangwei@ubuntu:~/protobuf$ sudo ldconfighuangwei@ubuntu:~/protobuf$ protoc --versionlibprotoc 3.9.0","link":"/2019/07/09/linux安装protobuf/"}],"tags":[{"name":"学术成果","slug":"学术成果","link":"/tags/学术成果/"},{"name":"debug","slug":"debug","link":"/tags/debug/"},{"name":"winograd","slug":"winograd","link":"/tags/winograd/"},{"name":"cuda","slug":"cuda","link":"/tags/cuda/"},{"name":"标注工具","slug":"标注工具","link":"/tags/标注工具/"},{"name":"gpu","slug":"gpu","link":"/tags/gpu/"},{"name":"图像拉伸","slug":"图像拉伸","link":"/tags/图像拉伸/"},{"name":"ncnn","slug":"ncnn","link":"/tags/ncnn/"},{"name":"protobuf","slug":"protobuf","link":"/tags/protobuf/"}],"categories":[]}